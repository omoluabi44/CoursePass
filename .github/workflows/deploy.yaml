name: CI/CD to EC2 with Docker

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/coursepass ./Frontend

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/coursepass

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: SSH and deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/coursepass

            echo "Checking for container(s) occupying port 5000..."
            old_container=\$(docker ps -q --filter "publish=5000")
            if [ -n "\$old_container" ]; then
              echo "Stopping container(s) occupying port 5000..."
              docker rm -f \$old_container
            else
              echo "No container occupying port 5000."
            fi

            echo "Starting new container..."
            docker run -d --name coursepass -p 5000:80 ${{ secrets.DOCKER_USERNAME }}/coursepass

            echo "Deployment complete!"
          EOF
